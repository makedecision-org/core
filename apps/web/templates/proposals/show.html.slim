.proposal
  .proposal__title
    h1 = proposal.title
    button x

  .proposal__meta
    .proposal__opened-information
      | Opened #{RelativeTime.in_words(proposal.created_at)}

    span aria-hidden="true" Â·

  .proposal__body = proposal_body

  hr

  .variants
    - if proposal.open?
      .add_variant = add_variant_form(org_id: params[:organisation_id])

    - proposal.variants.each do |variant|
      .variant
        h3.variant__title = variant.name

        .variant__body
          = variant_body(variant)

        .traits
          .positive
            - if proposal.open?
              = add_positive_trait_form(variant, org_id: params[:organisation_id])

            ul
              - variant.positive_traits.each do |trait|
                li = delete_positive_trait_form(proposal, variant, trait[:value], org_id: params[:organisation_id])

          .negative
            - if proposal.open?
              = add_negative_trait_form(variant, org_id: params[:organisation_id])

            ul
              - variant.negative_traits.each do |trait|
                li = delete_negative_trait_form(proposal, variant, trait[:value], org_id: params[:organisation_id])

  hr

  .decisions
    h2 Decisions

    - if proposal.open?
      = link_to 'Suggest poll', routes.new_organisation_proposal_poll_path(params[:organisation_id], proposal.id), class: 'btn btn-outline-secondary'

    - proposal.polls.each do |poll|
      h3 = poll.title

      form action="#" method="POST"
        - poll.poll_variants.each do |poll_variant|
          .form-check
            input.form-check-input type="checkbox" value="" id="check#{poll_variant.id}"
            label.form-check-label for="hanamiCheck" = poll_variant.title

        br
        input type="submit" value="Vote" name="vote" class="btn btn-success"

  hr

  - if proposal.open?
    .proposal__actions
      = update_proposal_status_form(org_id: params[:organisation_id])

    hr

  .thread
    h2 Thread

    - if proposal.open?
      = add_comment_form(org_id: params[:organisation_id])

    hr

    .comments
      - proposal.comments.each do |comment|
        .comment
          p = comment.created_at

          div = comment_body(comment)

